// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap, AppRouteHandlerRoutes } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/dist/lib/metadata/types/metadata-interface.js"
import type { NextRequest } from 'next/server.js'

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}


// Validate ..\..\src\app\SubCat\[id]\page.tsx
{
  const handler = {} as typeof import("..\\..\\src\\app\\SubCat\\[id]\\page.js")
  handler satisfies AppPageConfig<"/SubCat/[id]">
}

// Validate ..\..\src\app\SubCat\page.tsx
{
  const handler = {} as typeof import("..\\..\\src\\app\\SubCat\\page.js")
  handler satisfies AppPageConfig<"/SubCat">
}

// Validate ..\..\src\app\address\page.tsx
{
  const handler = {} as typeof import("..\\..\\src\\app\\address\\page.js")
  handler satisfies AppPageConfig<"/address">
}

// Validate ..\..\src\app\allorders\[userId]\page.tsx
{
  const handler = {} as typeof import("..\\..\\src\\app\\allorders\\[userId]\\page.js")
  handler satisfies AppPageConfig<"/allorders/[userId]">
}

// Validate ..\..\src\app\brands\[id]\page.tsx
{
  const handler = {} as typeof import("..\\..\\src\\app\\brands\\[id]\\page.js")
  handler satisfies AppPageConfig<"/brands/[id]">
}

// Validate ..\..\src\app\brands\page.tsx
{
  const handler = {} as typeof import("..\\..\\src\\app\\brands\\page.js")
  handler satisfies AppPageConfig<"/brands">
}

// Validate ..\..\src\app\cart\page.tsx
{
  const handler = {} as typeof import("..\\..\\src\\app\\cart\\page.js")
  handler satisfies AppPageConfig<"/cart">
}

// Validate ..\..\src\app\categories\[id]\page.tsx
{
  const handler = {} as typeof import("..\\..\\src\\app\\categories\\[id]\\page.js")
  handler satisfies AppPageConfig<"/categories/[id]">
}

// Validate ..\..\src\app\categories\page.tsx
{
  const handler = {} as typeof import("..\\..\\src\\app\\categories\\page.js")
  handler satisfies AppPageConfig<"/categories">
}

// Validate ..\..\src\app\checkout\[id]\page.tsx
{
  const handler = {} as typeof import("..\\..\\src\\app\\checkout\\[id]\\page.js")
  handler satisfies AppPageConfig<"/checkout/[id]">
}

// Validate ..\..\src\app\dashboard\page.tsx
{
  const handler = {} as typeof import("..\\..\\src\\app\\dashboard\\page.js")
  handler satisfies AppPageConfig<"/dashboard">
}

// Validate ..\..\src\app\forgotPass\page.tsx
{
  const handler = {} as typeof import("..\\..\\src\\app\\forgotPass\\page.js")
  handler satisfies AppPageConfig<"/forgotPass">
}

// Validate ..\..\src\app\login\page.tsx
{
  const handler = {} as typeof import("..\\..\\src\\app\\login\\page.js")
  handler satisfies AppPageConfig<"/login">
}

// Validate ..\..\src\app\page.tsx
{
  const handler = {} as typeof import("..\\..\\src\\app\\page.js")
  handler satisfies AppPageConfig<"/">
}

// Validate ..\..\src\app\products\[id]\page.tsx
{
  const handler = {} as typeof import("..\\..\\src\\app\\products\\[id]\\page.js")
  handler satisfies AppPageConfig<"/products/[id]">
}

// Validate ..\..\src\app\products\page.tsx
{
  const handler = {} as typeof import("..\\..\\src\\app\\products\\page.js")
  handler satisfies AppPageConfig<"/products">
}

// Validate ..\..\src\app\profile\page.tsx
{
  const handler = {} as typeof import("..\\..\\src\\app\\profile\\page.js")
  handler satisfies AppPageConfig<"/profile">
}

// Validate ..\..\src\app\signin\page.tsx
{
  const handler = {} as typeof import("..\\..\\src\\app\\signin\\page.js")
  handler satisfies AppPageConfig<"/signin">
}

// Validate ..\..\src\app\wish\page.tsx
{
  const handler = {} as typeof import("..\\..\\src\\app\\wish\\page.js")
  handler satisfies AppPageConfig<"/wish">
}







// Validate ..\..\src\app\layout.tsx
{
  const handler = {} as typeof import("..\\..\\src\\app\\layout.js")
  handler satisfies LayoutConfig<"/">
}

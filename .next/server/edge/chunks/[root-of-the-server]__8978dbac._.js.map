{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/middleware.ts"],"sourcesContent":["import { getToken } from \"next-auth/jwt\";\r\nimport { NextRequest, NextResponse } from \"next/server\";\r\n\r\nexport async function middleware(req: NextRequest) {\r\n    const token = await getToken({ req: req });\r\n    if (token) {\r\n        if(req.nextUrl.pathname === '/login' ||\r\n            req.nextUrl.pathname === '/register' ||\r\n            req.nextUrl.pathname === '/forgotPass' ||\r\n            req.nextUrl.pathname === '/resetPass'\r\n        ) {\r\n            return NextResponse.redirect(new URL('/', req.url));\r\n        }\r\n        else {\r\n        return NextResponse.next();\r\n        }\r\n    }\r\n    else {\r\n        if(req.nextUrl.pathname === '/cart') {\r\n            return NextResponse.redirect(new URL('/login', req.url));\r\n        }\r\n        else {\r\n            return NextResponse.next();\r\n        }\r\n    }\r\n}\r\n\r\nexport const config = {\r\n    matcher: [\"/cart\", \"/login\", \"/register\", '/forgotPass', '/resetPass'],\r\n};\r\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AAAA;;;AAEO,eAAe,WAAW,GAAgB;IAC7C,MAAM,QAAQ,MAAM,IAAA,gKAAQ,EAAC;QAAE,KAAK;IAAI;IACxC,IAAI,OAAO;QACP,IAAG,IAAI,OAAO,CAAC,QAAQ,KAAK,YACxB,IAAI,OAAO,CAAC,QAAQ,KAAK,eACzB,IAAI,OAAO,CAAC,QAAQ,KAAK,iBACzB,IAAI,OAAO,CAAC,QAAQ,KAAK,cAC3B;YACE,OAAO,gMAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,KAAK,IAAI,GAAG;QACrD,OACK;YACL,OAAO,gMAAY,CAAC,IAAI;QACxB;IACJ,OACK;QACD,IAAG,IAAI,OAAO,CAAC,QAAQ,KAAK,SAAS;YACjC,OAAO,gMAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU,IAAI,GAAG;QAC1D,OACK;YACD,OAAO,gMAAY,CAAC,IAAI;QAC5B;IACJ;AACJ;AAEO,MAAM,SAAS;IAClB,SAAS;QAAC;QAAS;QAAU;QAAa;QAAe;KAAa;AAC1E"}}]
}
{"version":3,"sources":["turbopack:///[project]/src/schema/forgetPass.ts","turbopack:///[project]/src/app/forgotPass/page.tsx","turbopack:///[project]/src/Api/forgetPass.ts","turbopack:///[project]/src/Api/verifyReset.ts","turbopack:///[project]/src/Api/reset.ts"],"sourcesContent":["import { z } from \"zod\"\r\n\r\n\r\nexport const forgetPassschema = z\r\n    .object({\r\n        email: z\r\n            .email(\"Email is required\")\r\n            .nonempty(\"Email is required\"),\r\n    })\r\n\r\nexport type forgetPassschemaType = z.infer<typeof forgetPassschema>","'use client';\r\n\r\nimport { forgetPassschema, forgetPassschemaType } from '@/schema/forgetPass';\r\nimport { zodResolver } from '@hookform/resolvers/zod';\r\nimport { useForm } from 'react-hook-form';\r\nimport React, { useState } from 'react';\r\nimport { Input } from '@/components/ui/input';\r\nimport {\r\n    Form,\r\n    FormField,\r\n    FormItem,\r\n    FormLabel,\r\n    FormControl,\r\n    FormDescription,\r\n    FormMessage,\r\n} from '@/components/ui/form';\r\nimport forgetPass from '@/Api/forgetPass';\r\nimport { toast } from 'sonner';\r\nimport verifyCode from '@/Api/verifyReset';\r\nimport reset from '@/Api/reset';\r\n\r\nexport default function ForgetPass() {\r\n    const [showPopup, setShowPopup] = useState(false);\r\n    const [showPasswordPopup, setShowPasswordPopup] = useState(false);\r\n    const [resetCode, setResetCode] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [userEmail, setUserEmail] = useState('');\r\n    const [newPassword, setNewPassword] = useState('');\r\n    const [loading, setLoading] = useState(false)\r\n\r\n\r\n    const form = useForm<forgetPassschemaType>({\r\n        defaultValues: {\r\n            email: '',\r\n        },\r\n        resolver: zodResolver(forgetPassschema),\r\n    });\r\n\r\n    async function handleForm(values: forgetPassschemaType) {\r\n        setLoading(true);\r\n\r\n        try {\r\n            const data = await forgetPass(values.email);\r\n            if (data.statusMsg === 'success') {\r\n                toast.success('Reset link sent to your email', {\r\n                    position: 'top-center',\r\n                    duration: 2000,\r\n                });\r\n                setUserEmail(values.email);\r\n                setShowPopup(true);\r\n                form.reset();\r\n            } else {\r\n                toast.error(data.message || 'Error sending reset link', {\r\n                    position: 'top-center',\r\n                    duration: 2000,\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.log('Error calling forgetPass API:', error);\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    async function handleVerifyCode() {\r\n        try {\r\n            const res = await verifyCode(resetCode);\r\n            if (res.status === 'Success') {\r\n                toast.success('Code verified successfully', { position: 'top-center' });\r\n                setResetCode('');\r\n                setShowPopup(false);\r\n                setShowPasswordPopup(true);\r\n            } else {\r\n                toast.error(res.message || 'Invalid code', { position: 'top-center' });\r\n            }\r\n        } catch (error) {\r\n            toast.error('Error verifying code', { position: 'top-center' });\r\n        }\r\n    }\r\n\r\n    async function handleResetPassword() {\r\n\r\n        try {\r\n            const res = await reset(userEmail, newPassword);\r\n            console.log(res);\r\n\r\n\r\n            if (res.token) {\r\n                toast.success('Password reset successfully', { position: 'top-center' });\r\n                setShowPasswordPopup(false);\r\n                setNewPassword('');\r\n                setConfirmPassword('');\r\n                window.location.href = '/login';\r\n            } else {\r\n                console.log(res);\r\n\r\n                toast.error(res.message || 'Failed to reset password', { position: 'top-center' });\r\n            }\r\n        } catch (error) {\r\n            toast.error('Error resetting password', { position: 'top-center' });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"w-full sm:w-2/3 md:w-1/2 lg:w-1/3 mx-auto mt-12 px-4\">\r\n            <Form {...form}>\r\n                <form onSubmit={form.handleSubmit(handleForm)} className=\"space-y-4\">\r\n                    <h1 className=\"text-3xl font-bold text-center text-blue-500\">\r\n                        Forgot Password\r\n                    </h1>\r\n\r\n                    <FormField\r\n                        control={form.control}\r\n                        name=\"email\"\r\n                        render={({ field }) => (\r\n                            <FormItem>\r\n                                <FormLabel>Email</FormLabel>\r\n                                <FormControl>\r\n                                    <Input\r\n                                        placeholder=\"Enter your email\"\r\n                                        {...field}\r\n                                        className=\"focus:ring-1 focus:!ring-blue-300\"\r\n                                        type=\"email\"\r\n                                    />\r\n                                </FormControl>\r\n                                <FormDescription />\r\n                                <FormMessage />\r\n                            </FormItem>\r\n                        )}\r\n                    />\r\n\r\n                    <button\r\n                        onClick={handleResetPassword}\r\n                        className=\"disabled:cursor-not-allowed mt-5 w-full cursor-pointer bg-blue-500 hover:bg-blue-600 duration-100 text-white py-2 rounded\"\r\n                        disabled={loading}\r\n                    >\r\n                        {loading ? \"Send Reset Link\" : \"Send Reset Link\"}\r\n                    </button>\r\n\r\n                </form>\r\n            </Form>\r\n\r\n            {showPopup && (\r\n                <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center\">\r\n                    <div className=\"bg-white rounded-lg p-6 w-96 shadow-lg\">\r\n                        <h2 className=\"text-xl font-bold mb-4 text-center\">\r\n                            Enter Reset Code\r\n                        </h2>\r\n                        <Input\r\n                            placeholder=\"Enter your reset code\"\r\n                            value={resetCode}\r\n                            onChange={(e) => setResetCode(e.target.value)}\r\n                            className=\"mb-4\"\r\n                        />\r\n                        <div className=\"flex justify-end gap-2\">\r\n                            <button\r\n                                onClick={() => {\r\n                                    setShowPopup(false);\r\n                                    setResetCode('');\r\n                                }}\r\n                                className=\"cursor-pointer px-4 py-2 bg-gray-300 rounded hover:bg-gray-400\"\r\n                            >\r\n                                Cancel\r\n                            </button>\r\n                            <button\r\n                                onClick={handleVerifyCode}\r\n                                className=\"cursor-pointer px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\"\r\n                            >\r\n                                Verify\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {showPasswordPopup && (\r\n                <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center\">\r\n                    <div className=\"bg-white rounded-lg p-6 w-96 shadow-lg\">\r\n                        <h2 className=\"text-xl font-bold mb-4 text-center\">\r\n                            Reset Your Password\r\n                        </h2>\r\n\r\n                        <Input\r\n                            placeholder=\"Enter your email\"\r\n                            type=\"email\"\r\n                            value={userEmail}\r\n                            onChange={(e) => setUserEmail(e.target.value)}\r\n                            className=\"mb-4\"\r\n                        />\r\n\r\n                        <Input\r\n                            placeholder=\"Enter new password\"\r\n                            type=\"password\"\r\n                            value={newPassword}\r\n                            onChange={(e) => setNewPassword(e.target.value)}\r\n                            className=\"mb-4\"\r\n                        />\r\n\r\n                        <div className=\"flex justify-end gap-2\">\r\n                            <button\r\n                                onClick={() => {\r\n                                    setShowPasswordPopup(false);\r\n                                    setUserEmail('');\r\n                                    setNewPassword('');\r\n                                }}\r\n                                className=\"cursor-pointer px-4 py-2 bg-gray-300 rounded hover:bg-gray-400\"\r\n                            >\r\n                                Cancel\r\n                            </button>\r\n                            <button\r\n                                onClick={handleResetPassword}\r\n                                className=\"cursor-pointer px-4 py-2 bg-blue-500 text-white rounded hover:bg-green-600\"\r\n                            >\r\n                                Reset Password\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n","export default async function forgetPass(email : string) {\r\n    const res = await fetch(\r\n        'https://ecommerce.routemisr.com/api/v1/auth/forgotPasswords',\r\n        {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                \"email\":email\r\n            }),\r\n        }\r\n    );\r\n\r\n    const data = await res.json();\r\n    console.log(data);\r\n\r\n    return data;\r\n}","export default async function verifyCode(code : string) {\r\n    const res = await fetch(\r\n        'https://ecommerce.routemisr.com/api/v1/auth/verifyResetCode',\r\n        {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                \"resetCode\":code\r\n            }),\r\n        }\r\n    );\r\n\r\n    const data = await res.json();\r\n    console.log(data);\r\n\r\n    return data;\r\n}","export default async function reset(email : string, pass : string) {\r\n    const res = await fetch(\r\n        'https://ecommerce.routemisr.com/api/v1/auth/resetPassword',\r\n        {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                \"email\":email,\r\n                \"newPassword\": pass\r\n            }),\r\n        }\r\n    );\r\n\r\n    const data = await res.json();\r\n    console.log(data);\r\n\r\n    return data;\r\n}"],"names":[],"mappings":"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"}